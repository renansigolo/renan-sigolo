{"version":3,"sources":["libs/_mixins.scss","main.scss","libs/_skel.scss","base/_page.scss","libs/_vars.scss","base/_typography.scss","components/_form.scss","components/_icon.scss","components/_list.scss","components/_button.scss","layout/_main.scss","layout/_footer.scss","layout/_wrapper.scss"],"names":[],"mappings":"AAOC,iBCHD,ADgBE,kCChBK,AAEP,2EAAY,ACqhBR,2ZAA2Z,SAAQ,AAAE,UAAS,AAAE,SAAQ,AAAE,eAAc,AAAE,aAAY,AAAE,uBAAuB,CAAI,AAAD,8EAA8E,aAAa,CAAI,AAAD,KAAK,aAAa,CAAI,AAAD,MAAM,eAAe,CAAI,AAAD,aAAa,WAAW,CAAI,AAAD,oDAAoD,WAAU,AAAE,YAAY,CAAI,AAAD,MAAM,yBAAwB,AAAE,gBAAgB,CAAI,AAAD,KAAK,6BAA6B,CAAG,AAlXj0B,iBAGC,qBAAY,CACZ,AAuBK,oCC5LN,UACE,eAAgB,CACjB,CAAA,AAIH,iED4iBW,iCAAwB,AAAxB,yBAAwB,AAAxB,yBAAwB,CCriB9B,AAQL,UAHE,WAAY,CAGd,AAqCC,KD+fU,oIAAc,AC9hBvB,6CAAmD,AACnD,wCAA6C,AAC7C,mCAA6D,AAC7D,uCAA+C,CA4BhD,AArCD,gBAEE,qBCDe,CDDjB,AA8BG,WAlBC,WAAW,AACX,cAAc,AACd,eAAe,AACf,MAAM,AACN,OAAO,AACP,WAAW,AACX,eAAe,AACf,UAAU,AACV,UAAU,ADghBH,2GAAc,AC3gBrB,mCAAsC,AACtC,kCAAmC,AACnC,4BAA6C,ADkgBtC,iCAAwB,CC/fhC,AA9BH,sBAkCM,SAAU,CACX,AE1DL,2BAIE,cDsBe,ACrBf,iDDYoD,ACXpD,eAAe,AACf,gBDYc,ACXd,cAAc,AACd,oBDGsB,ACFtB,wBAAyB,CAW1B,AHyKO,qCG9LR,2BAaI,cAAe,CAQlB,CAAA,AHyKO,oCG9LR,2BAkBI,eAAe,AACf,gBAAiB,CAEpB,CAAA,AAED,EH6hBW,gDAAwB,AG1hBjC,cAAc,AACd,oBAAqB,CAStB,AAbD,SH6hBW,8CAAwB,CGrhBhC,AARH,QAWI,aDFkB,CCGnB,AAGH,SAEE,aDbkB,CCcnB,AAED,KAEE,iBAAkB,CACnB,AAED,EACE,gBAAmC,CACpC,AAED,kBAME,cD/BkB,ACgClB,gBAAgB,AAChB,gBAA2C,CAM5C,AAdD,8BAWI,cAAc,AACd,oBAAqB,CACtB,AAGH,GACE,iBAAiB,AACjB,qBAA2C,AAC3C,iBAA4C,CAC7C,AAED,GACE,gBAAiB,CAClB,AAcD,YACE,aAAc,CACf,AHkGO,oCG/FN,GACE,gBAAiB,CAClB,CAAA,AAIH,IAGE,QAAU,CACX,AAED,QALE,eAAgB,AAChB,iBAAkB,CAIpB,AAIC,IADC,SAAW,CACZ,AAED,GACE,SAAS,AACT,gCDtFkB,ACuFlB,YAAqC,CACtC,ACrHD,iBAII,gBAAmC,CAKpC,AATH,wBAOM,eAAgB,CACjB,AAIL,MACE,cFckB,AEblB,cAAc,AACd,eAAgB,AAChB,gBAA2C,CAC5C,AAED,wFJiiBW,qBAAwB,AAAxB,wBAAwB,AAAxB,oBAAwB,AAAxB,gBAAwB,AIzhBjC,kBFnBmB,AEoBnB,yBFCkB,AEAlB,cAAc,AACd,cAAc,AACd,UAAU,AACV,cAAc,AACd,qBAAqB,AACrB,UAAW,CASZ,AAxBD,wIAkBI,eAAgB,CACjB,AAnBH,4HAsBI,oBFTkB,CEUnB,AAGH,gBN9CC,qBAAqB,AMiDpB,cAAc,AACd,iBAAkB,CAkBnB,ANlEA,uBAGE,YM0Ca,ANvCd,kCAAkC,AAClC,mCAAmC,AACnC,wBAAwB,AACxB,kBAAkB,AAClB,gBAAmB,AACnB,8BAA+B,AMwC7B,cFvBgB,AEwBhB,cAAc,AACd,cF5CqB,AE6CrB,mBF7CqB,AE8CrB,oBAAoB,AACpB,kBAAkB,AAClB,QAAQ,AACR,kBAAkB,AAClB,MAAM,AACN,YFnDqB,CJIvB,AM+BF,mCAoBI,YAAa,CACd,AAGH,+DAIE,aF/DuB,CEgExB,AAED,SACE,iBAAmB,CACpB,AAED,uCJoeW,qBAAwB,AAAxB,wBAAwB,AAAxB,oBAAwB,AAAxB,gBAAwB,AIhejC,cAAc,AACd,WAAW,AACX,kBAAkB,AAClB,UAAU,AACV,UAAU,AACV,UAAW,CA0CZ,AAnDD,mDNjFC,qBAAqB,AM+FlB,cFpEa,AEqEb,eAAe,AACf,qBAAqB,AACrB,cAAc,AACd,gBF/EY,AEgFZ,mBAAkD,AAClD,oBAAqB,AACrB,iBAAkB,CAgBnB,AArCH,iENzEE,kCAAkC,AAClC,mCAAmC,AACnC,wBAAwB,AACxB,kBAAkB,AAClB,gBAAmB,AACnB,8BAA+B,AM6F3B,kBFjGe,AEkGf,yBF7Ec,AE8Ed,WAAW,AACX,qBAAqB,AACrB,cAAmC,AACnC,OAAO,AACP,sBAA0C,AAC1C,kBAAkB,AAClB,kBAAkB,AAClB,UAAW,AACX,YAAkC,CNrGtC,AMkEF,iFAyCM,cFzFgB,AE0FhB,eAAgB,CACjB,AA3CL,6EAgDM,oBFhGgB,CEiGjB,AAIL,kCAGM,iBFhIe,CEiIhB,AAIL,+BAGM,kBAAmB,CACpB,AAIL,4BACE,wBAAoC,AACpC,SAAU,CACX,AAOD,qCACE,wBAAoC,AACpC,SAAU,CACX,AAED,uBACE,wBAAoC,AACpC,SAAU,CACX,AAED,uBACE,wBAAoC,AACpC,SAAU,CACX,AC5KD,MPDC,qBAAqB,AOIpB,kBAAkB,AAClB,kBAAmB,CAKpB,APRA,aAMC,kCAAkC,AAClC,mCAAmC,AACnC,wBAAwB,AACxB,kBAAkB,AAClB,gBAAmB,AACnB,6BAA+B,CAE/B,AOdF,aAOI,YAAa,CACd,ACRH,GACE,mBAAmB,AACnB,iBAAmC,AACnC,mBAAoB,CAKrB,AARD,MAMI,kBAAoB,CACrB,AAGH,GACE,gBAAgB,AAChB,iBAAmC,AACnC,gBAAiB,CA0FlB,AA7FD,MAMI,iBAAmB,CACpB,AAPH,OAUI,gBAAgB,AAChB,cAAe,CAWhB,AAtBH,UAcM,6BJKc,AIJd,cAAgB,CAMjB,AArBL,sBAkBQ,aAAa,AACb,aAAc,CACf,AApBP,SAyBI,eAAe,AACf,gBAAgB,AAChB,eAAe,AACf,kBAAoB,CAgDrB,AA5EH,YA+BM,qBAAqB,AACrB,mBAAsB,CAiCvB,AAjEL,cRXC,qBAAqB,AQgDd,kBAAkB,AAClB,cAAc,AACd,aAAa,AACb,cAAc,AACd,mBAAmB,AACnB,yBJvBY,AIwBZ,mBAAmB,AACnB,gBAAgB,AAChB,kBAAkB,AAClB,mBAAmB,AACnB,kBAAmB,CAiBpB,AAhEP,qBRHE,kCAAkC,AAClC,mCAAmC,AACnC,wBAAwB,AACxB,kBAAkB,AAClB,gBAAmB,AACnB,8BAA+B,ACA7B,WGYa,AHXb,yFGgBgB,CJflB,AQJF,2BPSQ,yFGac,CHZf,AOVP,qBAkDU,kBAAkB,AAClB,MAAM,AACN,OAAO,AACP,cAAc,AACd,eAAe,AACf,kBAAkB,AAClB,oBAAoB,AACpB,kBAAkB,AAClB,aAAc,CACf,AA3DT,oBA8DU,oBJxCY,CIyCb,ANqHD,oCMpLR,qBAuEY,gBAAiB,CAClB,CAAA,AAxEX,WA+EI,eAAe,AACf,gBAAgB,AAChB,cAAe,CAWhB,AA5FH,cAoFM,qBAAqB,AACrB,oBAA4C,AAC5C,qBAAsB,CAKvB,AA3FL,yBAyFQ,eAAgB,CACjB,AAKP,GACE,gBAAmC,CAWpC,AAZD,MAII,cAAc,AAEd,gBAA2C,CAC5C,AAPH,MAUI,iBJxGoB,CIyGrB,ACpHH,uEPojBW,qBAAwB,AAAxB,wBAAwB,AAAxB,oBAAwB,AAAxB,gBAAwB,AAAxB,+FAAwB,AO5iBjC,qBAAqB,AACrB,cLCuB,AKAvB,mBLAuB,AKCvB,gBAAgB,AAChB,6BAA6B,AAC7B,kBLLmB,AKMnB,yBLekB,AKdlB,wBAA8B,AAC9B,eAAe,AACf,kBAAkB,AAClB,qBAAqB,AACrB,kBAAmB,CAmCpB,AAtDD,qGAsBI,qBLUkB,AKTlB,uBAAqC,CACtC,AAxBH,gGA2BI,mBAAoB,CAKrB,AAhCH,mIA8BM,iBAAmB,CACpB,AA/BL,2FAmCI,cAAc,AACd,WAAW,AACX,gBAA2C,CAC5C,AAtCH,qGAyCI,cAAgB,CACjB,AA1CH,2FA6CI,gBAAiB,CAClB,AA9CH,wOPojBW,yBAAwB,AAAxB,4BAAwB,AAAxB,wBAAwB,AAAxB,oBAAwB,AOhgB/B,UAAY,CACb,ACrDF,MACC,kBAAkB,AAClB,eAAe,AACf,eAAe,AVgChB,sBAAwH,AU7BvH,gBNkBe,AMjBf,kBNCmB,AMAnB,eAAe,AACf,YAAa,AACb,kBAAkB,AR0iBT,iCAAwB,AAAxB,yBAAwB,AAAxB,gCAAwB,AAAxB,wBAAwB,AAAxB,qDAAwB,AAAxB,6CAAwB,AAAxB,sEAAwB,CQrfjC,AA/DD,cAoBE,kBAAkB,AAClB,cAAc,AACd,mBNXqB,CMiCrB,AA5CF,kBAyBG,cAAc,AACd,cAAc,AACd,mBAAmB,AACnB,4BNJa,AMKD,YAAY,AACZ,YAAa,CACzB,AA/BH,qBAkCG,WAAW,AACX,cAAc,AACd,kBAAkB,AAClB,QAAQ,AACR,UAAU,AACV,uBAAuB,AACvB,WN/BgB,AMgChB,WAAW,AACX,kBNbgB,CMchB,ARmJI,oCQ9LP,MA+CE,YAAY,AACZ,WAAW,AVbb,qBAAwH,CU4BvH,AA/DD,qBAqDI,UAAU,AACV,sBAAuB,CACvB,CAAA,AAIH,sBACC,UAAU,ARwfF,iCAAwB,AAAxB,wBAAwB,CQtfhC,AC9DF,QTojBU,oCAAwB,AAAxB,4BAAwB,AAAxB,wBAAwB,AAAxB,oBAAwB,ASljBjC,WAAW,AACX,kBAAoC,AACpC,0BAA6B,AAC7B,eAAe,AACf,iBAAkB,CAoBlB,AA1BD,mBASE,SAAS,AACT,UAAU,AACV,eAAgB,AAChB,eAAgB,CAahB,AAzBF,sBAeG,qBAAqB,AACrB,mBAAoD,AACpD,oBAAqB,AACrB,yCAA4D,AAC5D,aAAc,CAKd,AAxBH,kCAsBI,aAAc,CACd,ACvBJ,SV2jBU,kBAAc,AAAd,iBAAc,AAAd,oBAAc,AAAd,oBAAc,AAAd,aAAc,AAPd,wBAAwB,AAAxB,uBAAwB,AAAxB,yBAAwB,AAAxB,sBAAwB,AAAxB,mBAAwB,AAAxB,mCAAwB,AAAxB,kCAAwB,AAAxB,yBAAwB,AAAxB,sBAAwB,AAAxB,8BAAwB,AAAxB,2BAAwB,AAAxB,0BAAwB,AAAxB,4BAAwB,AAAxB,6BAAwB,AAAxB,sBAAwB,AAAxB,2BAAwB,AAAxB,uBAAwB,AAAxB,mBAAwB,AU9iBjC,kBAAkB,AAClB,gBAAgB,AAChB,cRGsB,AQFtB,SAAU,CAkBV,AA3BD,WAYE,SAAU,CACV,AAbF,gBAgBE,WAAW,AACX,aAAc,CACd,AV4KK,oCU9LP,SAqBE,aAAsC,CAMvC,CAAA,AAHA,oBACC,WAAY,CACZ","file":"styles.min.css","sourcesContent":["/// Makes an element's :before pseudoelement a FontAwesome icon.\r\n/// @param {string} $content Optional content value to use.\r\n/// @param {string} $where Optional pseudoelement to target (before or after).\r\n@mixin icon($content: false, $where: before) {\r\n\r\n\ttext-decoration: none;\r\n\r\n\t&:#{$where} {\r\n\r\n\t\t@if $content {\r\n\t\t\tcontent: $content;\r\n\t\t}\r\n\r\n\t\t-moz-osx-font-smoothing: grayscale;\r\n\t\t-webkit-font-smoothing: antialiased;\r\n\t\tfont-family: FontAwesome;\r\n\t\tfont-style: normal;\r\n\t\tfont-weight: normal;\r\n\t\ttext-transform: none !important;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/// Applies padding to an element, taking the current element-margin value into account.\r\n/// @param {mixed} $tb Top/bottom padding.\r\n/// @param {mixed} $lr Left/right padding.\r\n/// @param {list} $pad Optional extra padding (in the following order top, right, bottom, left)\r\n/// @param {bool} $important If true, adds !important.\r\n@mixin padding($tb, $lr, $pad: (0,0,0,0), $important: null) {\r\n\r\n\t@if $important {\r\n\t\t$important: '!important';\r\n\t}\r\n\r\n\t$x: 0.1em;\r\n\r\n\t@if unit(_size(element-margin)) == 'rem' {\r\n\t\t$x: 0.1rem;\r\n\t}\r\n\r\n\tpadding: ($tb + nth($pad,1)) ($lr + nth($pad,2)) max($x, $tb - _size(element-margin) + nth($pad,3)) ($lr + nth($pad,4)) #{$important};\r\n\r\n}\r\n\r\n/// Encodes a SVG data URL so IE doesn't choke (via codepen.io/jakob-e/pen/YXXBrp).\r\n/// @param {string} $svg SVG data URL.\r\n/// @return {string} Encoded SVG data URL.\r\n@function svg-url($svg) {\r\n\r\n\t$svg: str-replace($svg, '\"', '\\'');\r\n\t$svg: str-replace($svg, '%', '%25');\r\n\t$svg: str-replace($svg, '<', '%3C');\r\n\t$svg: str-replace($svg, '>', '%3E');\r\n\t$svg: str-replace($svg, '&', '%26');\r\n\t$svg: str-replace($svg, '#', '%23');\r\n\t$svg: str-replace($svg, '{', '%7B');\r\n\t$svg: str-replace($svg, '}', '%7D');\r\n\t$svg: str-replace($svg, ';', '%3B');\r\n\r\n\t@return url(\"data:image/svg+xml;charset=utf8,#{$svg}\");\r\n\r\n}\r\n\r\n/// Initializes base flexgrid classes.\r\n/// @param {string} $vertical-align Vertical alignment of cells.\r\n/// @param {string} $horizontal-align Horizontal alignment of cells.\r\n@mixin flexgrid-base($vertical-align: null, $horizontal-align: null) {\r\n\r\n\t// Grid.\r\n\t\t@include vendor('display', 'flex');\r\n\t\t@include vendor('flex-wrap', 'wrap');\r\n\r\n\t\t// Vertical alignment.\r\n\t\t\t@if ($vertical-align == top) {\r\n\t\t\t\t@include vendor('align-items', 'flex-start');\r\n\t\t\t}\r\n\t\t\t@else if ($vertical-align == bottom) {\r\n\t\t\t\t@include vendor('align-items', 'flex-end');\r\n\t\t\t}\r\n\t\t\t@else if ($vertical-align == center) {\r\n\t\t\t\t@include vendor('align-items', 'center');\r\n\t\t\t}\r\n\t\t\t@else {\r\n\t\t\t\t@include vendor('align-items', 'stretch');\r\n\t\t\t}\r\n\r\n\t\t// Horizontal alignment.\r\n\t\t\t@if ($horizontal-align != null) {\r\n\t\t\t\ttext-align: $horizontal-align;\r\n\t\t\t}\r\n\r\n\t// Cells.\r\n\t\t> * {\r\n\t\t\t@include vendor('flex-shrink', '1');\r\n\t\t\t@include vendor('flex-grow', '0');\r\n\t\t}\r\n\r\n}\r\n\r\n/// Sets up flexgrid columns.\r\n/// @param {integer} $columns Columns.\r\n@mixin flexgrid-columns($columns) {\r\n\r\n\t> * {\r\n\t\t$cell-width: 100% / $columns;\r\n\t\twidth: #{$cell-width};\r\n\t}\r\n\r\n}\r\n\r\n/// Sets up flexgrid gutters.\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters.\r\n@mixin flexgrid-gutters($columns, $gutters) {\r\n\r\n\t// Apply padding.\r\n\t\t> * {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: $cell-width;\r\n\t\t}\r\n\r\n}\r\n\r\n/// Sets up flexgrid gutters (flush).\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters.\r\n@mixin flexgrid-gutters-flush($columns, $gutters) {\r\n\r\n\t// Apply padding.\r\n\t\t> * {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\t\t\t$cell-width-pad: $gutters / $columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n\t// Clear top/bottom gutters.\r\n\t\t> :nth-child(-n + #{$columns}) {\r\n\t\t\tpadding-top: 0;\r\n\t\t}\r\n\r\n\t\t> :nth-last-child(-n + #{$columns}) {\r\n\t\t\tpadding-bottom: 0;\r\n\t\t}\r\n\r\n\t// Clear left/right gutters.\r\n\t\t> :nth-child(#{$columns}n + 1) {\r\n\t\t\tpadding-left: 0;\r\n\t\t}\r\n\r\n\t\t> :nth-child(#{$columns}n) {\r\n\t\t\tpadding-right: 0;\r\n\t\t}\r\n\r\n\t// Adjust widths of leftmost and rightmost cells.\r\n\t\t> :nth-child(#{$columns}n + 1),\r\n\t\t> :nth-child(#{$columns}n) {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\t\t\t$cell-width-pad: ($gutters / $columns) - ($gutters / 2);\r\n\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n}\r\n\r\n/// Reset flexgrid gutters (flush only).\r\n/// Used to override a previous set of flexgrid gutter classes.\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters.\r\n/// @param {integer} $prev-columns Previous columns.\r\n@mixin flexgrid-gutters-flush-reset($columns, $gutters, $prev-columns) {\r\n\r\n\t// Apply padding.\r\n\t\t> * {\r\n\t\t\t$cell-width: 100% / $prev-columns;\r\n\t\t\t$cell-width-pad: $gutters / $prev-columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n\t// Clear top/bottom gutters.\r\n\t\t> :nth-child(-n + #{$prev-columns}) {\r\n\t\t\tpadding-top: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t\t> :nth-last-child(-n + #{$prev-columns}) {\r\n\t\t\tpadding-bottom: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t// Clear left/right gutters.\r\n\t\t> :nth-child(#{$prev-columns}n + 1) {\r\n\t\t\tpadding-left: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t\t> :nth-child(#{$prev-columns}n) {\r\n\t\t\tpadding-right: ($gutters * 0.5);\r\n\t\t}\r\n\r\n\t// Adjust widths of leftmost and rightmost cells.\r\n\t\t> :nth-child(#{$prev-columns}n + 1),\r\n\t\t> :nth-child(#{$prev-columns}n) {\r\n\t\t\t$cell-width: 100% / $columns;\r\n\t\t\t$cell-width-pad: $gutters / $columns;\r\n\r\n\t\t\tpadding: ($gutters * 0.5);\r\n\t\t\twidth: calc(#{$cell-width} + #{$cell-width-pad});\r\n\t\t}\r\n\r\n}\r\n\r\n/// Adds debug styles to current flexgrid element.\r\n@mixin flexgrid-debug() {\r\n\r\n\tbox-shadow: 0 0 0 1px red;\r\n\r\n\t> * {\r\n\t\tbox-shadow: inset 0 0 0 1px blue;\r\n\t\tposition: relative;\r\n\r\n\t\t> * {\r\n\t\t\tposition: relative;\r\n\t\t\tbox-shadow: inset 0 0 0 1px green;\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/// Initializes the current element as a flexgrid.\r\n/// @param {integer} $columns Columns (optional).\r\n/// @param {number} $gutters Gutters (optional).\r\n/// @param {bool} $flush If true, clears padding around the very edge of the grid.\r\n@mixin flexgrid($settings: ()) {\r\n\r\n\t// Settings.\r\n\r\n\t\t// Debug.\r\n\t\t\t$debug: false;\r\n\r\n\t\t\t@if (map-has-key($settings, 'debug')) {\r\n\t\t\t\t$debug: map-get($settings, 'debug');\r\n\t\t\t}\r\n\r\n\t\t// Vertical align.\r\n\t\t\t$vertical-align: null;\r\n\r\n\t\t\t@if (map-has-key($settings, 'vertical-align')) {\r\n\t\t\t\t$vertical-align: map-get($settings, 'vertical-align');\r\n\t\t\t}\r\n\r\n\t\t// Horizontal align.\r\n\t\t\t$horizontal-align: null;\r\n\r\n\t\t\t@if (map-has-key($settings, 'horizontal-align')) {\r\n\t\t\t\t$horizontal-align: map-get($settings, 'horizontal-align');\r\n\t\t\t}\r\n\r\n\t\t// Columns.\r\n\t\t\t$columns: null;\r\n\r\n\t\t\t@if (map-has-key($settings, 'columns')) {\r\n\t\t\t\t$columns: map-get($settings, 'columns');\r\n\t\t\t}\r\n\r\n\t\t// Gutters.\r\n\t\t\t$gutters: 0;\r\n\r\n\t\t\t@if (map-has-key($settings, 'gutters')) {\r\n\t\t\t\t$gutters: map-get($settings, 'gutters');\r\n\t\t\t}\r\n\r\n\t\t// Flush.\r\n\t\t\t$flush: true;\r\n\r\n\t\t\t@if (map-has-key($settings, 'flush')) {\r\n\t\t\t\t$flush: map-get($settings, 'flush');\r\n\t\t\t}\r\n\r\n\t// Initialize base grid.\r\n\t\t@include flexgrid-base($vertical-align, $horizontal-align);\r\n\r\n\t// Debug?\r\n\t\t@if ($debug) {\r\n\t\t\t@include flexgrid-debug;\r\n\t\t}\r\n\r\n\t// Columns specified?\r\n\t\t@if ($columns != null) {\r\n\r\n\t\t\t// Initialize columns.\r\n\t\t\t\t@include flexgrid-columns($columns);\r\n\r\n\t\t\t// Gutters specified?\r\n\t\t\t\t@if ($gutters > 0) {\r\n\r\n\t\t\t\t\t// Flush gutters?\r\n\t\t\t\t\t\t@if ($flush) {\r\n\r\n\t\t\t\t\t\t\t// Initialize gutters (flush).\r\n\t\t\t\t\t\t\t\t@include flexgrid-gutters-flush($columns, $gutters);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise ...\r\n\t\t\t\t\t\t@else {\r\n\r\n\t\t\t\t\t\t\t// Initialize gutters.\r\n\t\t\t\t\t\t\t\t@include flexgrid-gutters($columns, $gutters);\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n}\r\n\r\n/// Resizes a previously-initialized grid.\r\n/// @param {integer} $columns Columns.\r\n/// @param {number} $gutters Gutters (optional).\r\n/// @param {list} $reset A list of previously-initialized grid columns (only if $flush is true).\r\n/// @param {bool} $flush If true, clears padding around the very edge of the grid.\r\n@mixin flexgrid-resize($settings: ()) {\r\n\r\n\t// Settings.\r\n\r\n\t\t// Columns.\r\n\t\t\t$columns: 1;\r\n\r\n\t\t\t@if (map-has-key($settings, 'columns')) {\r\n\t\t\t\t$columns: map-get($settings, 'columns');\r\n\t\t\t}\r\n\r\n\t\t// Gutters.\r\n\t\t\t$gutters: 0;\r\n\r\n\t\t\t@if (map-has-key($settings, 'gutters')) {\r\n\t\t\t\t$gutters: map-get($settings, 'gutters');\r\n\t\t\t}\r\n\r\n\t\t// Previous columns.\r\n\t\t\t$prev-columns: false;\r\n\r\n\t\t\t@if (map-has-key($settings, 'prev-columns')) {\r\n\t\t\t\t$prev-columns: map-get($settings, 'prev-columns');\r\n\t\t\t}\r\n\r\n\t\t// Flush.\r\n\t\t\t$flush: true;\r\n\r\n\t\t\t@if (map-has-key($settings, 'flush')) {\r\n\t\t\t\t$flush: map-get($settings, 'flush');\r\n\t\t\t}\r\n\r\n\t// Resize columns.\r\n\t\t@include flexgrid-columns($columns);\r\n\r\n\t// Gutters specified?\r\n\t\t@if ($gutters > 0) {\r\n\r\n\t\t\t// Flush gutters?\r\n\t\t\t\t@if ($flush) {\r\n\r\n\t\t\t\t\t// Previous columns specified?\r\n\t\t\t\t\t\t@if ($prev-columns) {\r\n\r\n\t\t\t\t\t\t\t// Convert to list if it isn't one already.\r\n\t\t\t\t\t\t\t\t@if (type-of($prev-columns) != list) {\r\n\t\t\t\t\t\t\t\t\t$prev-columns: ($prev-columns);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Step through list of previous columns and reset them.\r\n\t\t\t\t\t\t\t\t@each $x in $prev-columns {\r\n\t\t\t\t\t\t\t\t\t@include flexgrid-gutters-flush-reset($columns, $gutters, $x);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Resize gutters (flush).\r\n\t\t\t\t\t\t@include flexgrid-gutters-flush($columns, $gutters);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t// Otherwise ...\r\n\t\t\t\t@else {\r\n\r\n\t\t\t\t\t// Resize gutters.\r\n\t\t\t\t\t\t@include flexgrid-gutters($columns, $gutters);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n}","@import \"libs/vars\";\n@import \"libs/functions\";\n@import \"libs/mixins\";\n@import \"libs/skel\";\n@import \"font-awesome.min.css\";\n\n@import url(\"https://fonts.googleapis.com/css?family=Source+Sans+Pro:300\");\n\n@include skel-breakpoints((xlarge: \"(max-width: 1680px)\", large: \"(max-width: 1280px)\", medium: \"(max-width: 960px)\", small: \"(max-width: 736px)\", xsmall: \"(max-width: 480px)\", xxsmall: \"(max-width: 360px)\"));\n\n@include skel-layout((reset: \"full\", boxModel: \"border\"));\n\n@mixin icon-alt($content: false, $link: false) {\n  @include icon($content);\n\n  $size: _size(border-width) * 1.25;\n\n  &:before {\n    color: _palette(bg);\n    text-shadow: $size 0px 0px _palette(border), ($size * -1) 0px 0px _palette(border), 0px $size 0px _palette(border), 0px ($size * -1) 0px _palette(border);\n  }\n\n  @if $link {\n    &:hover {\n      &:before {\n        text-shadow: $size 0px 0px _palette(highlight), ($size * -1) 0px 0px _palette(highlight), 0px $size 0px _palette(highlight), 0px ($size * -1) 0px _palette(highlight);\n      }\n    }\n  }\n}\n\n// Base.\n\n@import \"base/page\";\n@import \"base/typography\";\n\n// Component.\n\n@import \"components/form\";\n@import \"components/icon\";\n@import \"components/list\";\n@import \"components/button\";\n\n// Layout.\n\n@import \"layout/main\";\n@import \"layout/footer\";\n@import \"layout/wrapper\";\n","// skel.scss v3.0.2-dev | (c) skel.io | MIT licensed */\r\n\r\n// Vars.\r\n\r\n\t/// Breakpoints.\r\n\t/// @var {list}\r\n\t$breakpoints: () !global;\r\n\r\n\t/// Vendor prefixes.\r\n\t/// @var {list}\r\n\t$vendor-prefixes: (\r\n\t\t'-moz-',\r\n\t\t'-webkit-',\r\n\t\t'-ms-',\r\n\t\t''\r\n\t);\r\n\r\n\t/// Properties that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-properties: (\r\n\t\t'align-content',\r\n\t\t'align-items',\r\n\t\t'align-self',\r\n\t\t'animation',\r\n\t\t'animation-delay',\r\n\t\t'animation-direction',\r\n\t\t'animation-duration',\r\n\t\t'animation-fill-mode',\r\n\t\t'animation-iteration-count',\r\n\t\t'animation-name',\r\n\t\t'animation-play-state',\r\n\t\t'animation-timing-function',\r\n\t\t'appearance',\r\n\t\t'backface-visibility',\r\n\t\t'box-sizing',\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'flex-basis',\r\n\t\t'flex-direction',\r\n\t\t'flex-flow',\r\n\t\t'flex-grow',\r\n\t\t'flex-shrink',\r\n\t\t'flex-wrap',\r\n\t\t'justify-content',\r\n\t\t'object-fit',\r\n\t\t'object-position',\r\n\t\t'order',\r\n\t\t'perspective',\r\n\t\t'pointer-events',\r\n\t\t'transform',\r\n\t\t'transform-origin',\r\n\t\t'transform-style',\r\n\t\t'transition',\r\n\t\t'transition-delay',\r\n\t\t'transition-duration',\r\n\t\t'transition-property',\r\n\t\t'transition-timing-function',\r\n\t\t'user-select'\r\n\t);\r\n\r\n\t/// Values that should be vendorized.\r\n\t/// @var {list}\r\n\t$vendor-values: (\r\n\t\t'filter',\r\n\t\t'flex',\r\n\t\t'linear-gradient',\r\n\t\t'radial-gradient',\r\n\t\t'transform'\r\n\t);\r\n\r\n// Functions.\r\n\r\n\t/// Removes a specific item from a list.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {list} $list List.\r\n\t/// @param {integer} $index Index.\r\n\t/// @return {list} Updated list.\r\n\t@function remove-nth($list, $index) {\r\n\r\n\t\t$result: null;\r\n\r\n\t\t@if type-of($index) != number {\r\n\t\t\t@warn \"$index: #{quote($index)} is not a number for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if $index == 0 {\r\n\t\t\t@warn \"List index 0 must be a non-zero integer for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else if abs($index) > length($list) {\r\n\t\t\t@warn \"List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.\";\r\n\t\t}\r\n\t\t@else {\r\n\r\n\t\t\t$result: ();\r\n\t\t\t$index: if($index < 0, length($list) + $index + 1, $index);\r\n\r\n\t\t\t@for $i from 1 through length($list) {\r\n\r\n\t\t\t\t@if $i != $index {\r\n\t\t\t\t\t$result: append($result, nth($list, $i));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t@return $result;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within another string.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {string} $string String.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {string} Updated string.\r\n\t@function str-replace($string, $search, $replace: '') {\r\n\r\n\t\t$index: str-index($string, $search);\r\n\r\n\t\t@if $index {\r\n\t\t\t@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\r\n\t\t}\r\n\r\n\t\t@return $string;\r\n\r\n\t}\r\n\r\n\t/// Replaces a substring within each string in a list.\r\n\t/// @param {list} $strings List of strings.\r\n\t/// @param {string} $search Substring.\r\n\t/// @param {string} $replace Replacement.\r\n\t/// @return {list} Updated list of strings.\r\n\t@function str-replace-all($strings, $search, $replace: '') {\r\n\r\n\t\t@each $string in $strings {\r\n\t\t\t$strings: set-nth($strings, index($strings, $string), str-replace($string, $search, $replace));\r\n\t\t}\r\n\r\n\t\t@return $strings;\r\n\r\n\t}\r\n\r\n\t/// Gets a value from a map.\r\n\t/// @author Hugo Giraudel\r\n\t/// @param {map} $map Map.\r\n\t/// @param {string} $keys Key(s).\r\n\t/// @return {string} Value.\r\n\t@function val($map, $keys...) {\r\n\r\n\t\t@if nth($keys, 1) == null {\r\n\t\t\t$keys: remove-nth($keys, 1);\r\n\t\t}\r\n\r\n\t\t@each $key in $keys {\r\n\t\t\t$map: map-get($map, $key);\r\n\t\t}\r\n\r\n\t\t@return $map;\r\n\r\n\t}\r\n\r\n// Mixins.\r\n\r\n\t/// Sets the global box model.\r\n\t/// @param {string} $model Model (default is content).\r\n\t@mixin boxModel($model: 'content') {\r\n\r\n\t\t$x: $model + '-box';\r\n\r\n\t\t*, *:before, *:after {\r\n\t\t\t-moz-box-sizing: #{$x};\r\n\t\t\t-webkit-box-sizing: #{$x};\r\n\t\t\tbox-sizing: #{$x};\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block using a given breakpoint.\r\n\t/// @param {string} $breakpoint Breakpoint.\r\n\t/// @param {map} $queries Additional queries.\r\n\t@mixin breakpoint($breakpoint: null, $queries: null) {\r\n\r\n\t\t$query: 'screen';\r\n\r\n\t\t// Breakpoint.\r\n\t\t\t@if $breakpoint and map-has-key($breakpoints, $breakpoint) {\r\n\t\t\t\t$query: $query + ' and ' + map-get($breakpoints, $breakpoint);\r\n\t\t\t}\r\n\r\n\t\t// Queries.\r\n\t\t\t@if $queries {\r\n\t\t\t\t@each $k, $v in $queries {\r\n\t\t\t\t\t$query: $query + ' and (' + $k + ':' + $v + ')';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in a @media block targeting a specific orientation.\r\n\t/// @param {string} $orientation Orientation.\r\n\t@mixin orientation($orientation) {\r\n\t\t@media screen and (orientation: #{$orientation}) {\r\n\t\t\t@content;\r\n\t\t}\r\n\t}\r\n\r\n\t/// Utility mixin for containers.\r\n\t/// @param {mixed} $width Width.\r\n\t@mixin containers($width) {\r\n\r\n\t\t// Locked?\r\n\t\t\t$lock: false;\r\n\r\n\t\t\t@if length($width) == 2 {\r\n\t\t\t\t$width: nth($width, 1);\r\n\t\t\t\t$lock: true;\r\n\t\t\t}\r\n\r\n\t\t// Modifiers.\r\n\t\t\t.container.\\31 25\\25\t\t{ width: 100%; max-width: $width * 1.25; min-width: $width; }\r\n\t\t\t.container.\\37 5\\25\t\t\t{ width: $width * 0.75; }\r\n\t\t\t.container.\\35 0\\25\t\t\t{ width: $width * 0.5; }\r\n\t\t\t.container.\\32 5\\25\t\t\t{ width: $width * 0.25; }\r\n\r\n\t\t// Main class.\r\n\t\t\t.container {\r\n\t\t\t\t@if $lock {\r\n\t\t\t\t\twidth: $width !important;\r\n\t\t\t\t}\r\n\t\t\t\t@else {\r\n\t\t\t\t\twidth: $width;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Column and row gutters (default is 40px).\r\n\t/// @param {string} $breakpointName Optional breakpoint name.\r\n\t@mixin grid($gutters: 40px, $breakpointName: null) {\r\n\r\n\t\t// Gutters.\r\n\t\t\t@include grid-gutters($gutters);\r\n\t\t\t@include grid-gutters($gutters, \\32 00\\25, 2);\r\n\t\t\t@include grid-gutters($gutters, \\31 50\\25, 1.5);\r\n\t\t\t@include grid-gutters($gutters, \\35 0\\25, 0.5);\r\n\t\t\t@include grid-gutters($gutters, \\32 5\\25, 0.25);\r\n\r\n\t\t// Cells.\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $breakpointName {\r\n\t\t\t\t$x: '\\\\28' + $breakpointName + '\\\\29';\r\n\t\t\t}\r\n\r\n\t\t\t.\\31 2u#{$x}, .\\31 2u\\24#{$x} { width: 100%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 1u#{$x}, .\\31 1u\\24#{$x} { width: 91.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 0u#{$x}, .\\31 0u\\24#{$x} { width: 83.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\39 u#{$x}, .\\39 u\\24#{$x} { width: 75%; clear: none; margin-left: 0; }\r\n\t\t\t.\\38 u#{$x}, .\\38 u\\24#{$x} { width: 66.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\37 u#{$x}, .\\37 u\\24#{$x} { width: 58.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\36 u#{$x}, .\\36 u\\24#{$x} { width: 50%; clear: none; margin-left: 0; }\r\n\t\t\t.\\35 u#{$x}, .\\35 u\\24#{$x} { width: 41.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\34 u#{$x}, .\\34 u\\24#{$x} { width: 33.3333333333%; clear: none; margin-left: 0; }\r\n\t\t\t.\\33 u#{$x}, .\\33 u\\24#{$x} { width: 25%; clear: none; margin-left: 0; }\r\n\t\t\t.\\32 u#{$x}, .\\32 u\\24#{$x} { width: 16.6666666667%; clear: none; margin-left: 0; }\r\n\t\t\t.\\31 u#{$x}, .\\31 u\\24#{$x} { width: 8.3333333333%; clear: none; margin-left: 0; }\r\n\r\n\t\t\t.\\31 2u\\24#{$x} + *,\r\n\t\t\t.\\31 1u\\24#{$x} + *,\r\n\t\t\t.\\31 0u\\24#{$x} + *,\r\n\t\t\t.\\39 u\\24#{$x} + *,\r\n\t\t\t.\\38 u\\24#{$x} + *,\r\n\t\t\t.\\37 u\\24#{$x} + *,\r\n\t\t\t.\\36 u\\24#{$x} + *,\r\n\t\t\t.\\35 u\\24#{$x} + *,\r\n\t\t\t.\\34 u\\24#{$x} + *,\r\n\t\t\t.\\33 u\\24#{$x} + *,\r\n\t\t\t.\\32 u\\24#{$x} + *,\r\n\t\t\t.\\31 u\\24#{$x} + * {\r\n\t\t\t\tclear: left;\r\n\t\t\t}\r\n\r\n\t\t\t.\\-11u#{$x} { margin-left: 91.6666666667% }\r\n\t\t\t.\\-10u#{$x} { margin-left: 83.3333333333% }\r\n\t\t\t.\\-9u#{$x} { margin-left: 75% }\r\n\t\t\t.\\-8u#{$x} { margin-left: 66.6666666667% }\r\n\t\t\t.\\-7u#{$x} { margin-left: 58.3333333333% }\r\n\t\t\t.\\-6u#{$x} { margin-left: 50% }\r\n\t\t\t.\\-5u#{$x} { margin-left: 41.6666666667% }\r\n\t\t\t.\\-4u#{$x} { margin-left: 33.3333333333% }\r\n\t\t\t.\\-3u#{$x} { margin-left: 25% }\r\n\t\t\t.\\-2u#{$x} { margin-left: 16.6666666667% }\r\n\t\t\t.\\-1u#{$x} { margin-left: 8.3333333333% }\r\n\r\n\t}\r\n\r\n\t/// Utility mixin for grid.\r\n\t/// @param {list} $gutters Gutters.\r\n\t/// @param {string} $class Optional class name.\r\n\t/// @param {integer} $multiplier Multiplier (default is 1).\r\n\t@mixin grid-gutters($gutters, $class: null, $multiplier: 1) {\r\n\r\n\t\t// Expand gutters if it's not a list.\r\n\t\t\t@if length($gutters) == 1 {\r\n\t\t\t\t$gutters: ($gutters, 0);\r\n\t\t\t}\r\n\r\n\t\t// Get column and row gutter values.\r\n\t\t\t$c: nth($gutters, 1);\r\n\t\t\t$r: nth($gutters, 2);\r\n\r\n\t\t// Get class (if provided).\r\n\t\t\t$x: '';\r\n\r\n\t\t\t@if $class {\r\n\t\t\t\t$x: '.' + $class;\r\n\t\t\t}\r\n\r\n\t\t// Default.\r\n\t\t\t.row#{$x} > * { padding: ($r * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row#{$x} { margin: ($r * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t\t// Uniform.\r\n\t\t\t.row.uniform#{$x} > * { padding: ($c * $multiplier) 0 0 ($c * $multiplier); }\r\n\t\t\t.row.uniform#{$x} { margin: ($c * $multiplier * -1) 0 -1px ($c * $multiplier * -1); }\r\n\r\n\t}\r\n\r\n\t/// Wraps @content in vendorized keyframe blocks.\r\n\t/// @param {string} $name Name.\r\n\t@mixin keyframes($name) {\r\n\r\n\t\t@-moz-keyframes #{$name} { @content; }\r\n\t\t@-webkit-keyframes #{$name} { @content; }\r\n\t\t@-ms-keyframes #{$name} { @content; }\r\n\t\t@keyframes #{$name} { @content; }\r\n\r\n\t}\r\n\r\n\t///\r\n\t/// Sets breakpoints.\r\n\t/// @param {map} $x Breakpoints.\r\n\t///\r\n\t@mixin skel-breakpoints($x: ()) {\r\n\t\t$breakpoints: $x !global;\r\n\t}\r\n\r\n\t///\r\n\t/// Initializes layout module.\r\n\t/// @param {map} config Config.\r\n\t///\r\n\t@mixin skel-layout($config: ()) {\r\n\r\n\t\t// Config.\r\n\t\t\t$configPerBreakpoint: ();\r\n\r\n\t\t\t$z: map-get($config, 'breakpoints');\r\n\r\n\t\t\t@if $z {\r\n\t\t\t\t$configPerBreakpoint: $z;\r\n\t\t\t}\r\n\r\n\t\t// Reset.\r\n\t\t\t$x: map-get($config, 'reset');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Reset */\r\n\r\n\t\t\t\t@include reset($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Box model.\r\n\t\t\t$x: map-get($config, 'boxModel');\r\n\r\n\t\t\t@if $x {\r\n\r\n\t\t\t\t/* Box Model */\r\n\r\n\t\t\t\t@include boxModel($x);\r\n\r\n\t\t\t}\r\n\r\n\t\t// Containers.\r\n\t\t\t$containers: map-get($config, 'containers');\r\n\r\n\t\t\t@if $containers {\r\n\r\n\t\t\t\t/* Containers */\r\n\r\n\t\t\t\t.container {\r\n\t\t\t\t\tmargin-left: auto;\r\n\t\t\t\t\tmargin-right: auto;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Use default is $containers is just \"true\".\r\n\t\t\t\t\t@if $containers == true {\r\n\t\t\t\t\t\t$containers: 960px;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include containers($containers);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'containers');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists? Use it.\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\t\t\t\t\t\t\t\t\t\t\t$containers: $y;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include containers($containers);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t// Grid.\r\n\t\t\t$grid: map-get($config, 'grid');\r\n\r\n\t\t\t@if $grid {\r\n\r\n\t\t\t\t/* Grid */\r\n\r\n\t\t\t\t// Use defaults if $grid is just \"true\".\r\n\t\t\t\t\t@if $grid == true {\r\n\t\t\t\t\t\t$grid: ();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t$grid-gutters: 40px;\r\n\t\t\t\t\t$x: map-get($grid, 'gutters');\r\n\r\n\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Rows.\r\n\t\t\t\t\t.row {\r\n\t\t\t\t\t\tborder-bottom: solid 1px transparent;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row > * {\r\n\t\t\t\t\t\tfloat: left;\r\n\t\t\t\t\t\t-moz-box-sizing: border-box;\r\n\t\t\t\t\t\t-webkit-box-sizing: border-box;\r\n\t\t\t\t\t\tbox-sizing: border-box;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row:after, .row:before {\r\n\t\t\t\t\t\tcontent: '';\r\n\t\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\t\tclear: both;\r\n\t\t\t\t\t\theight: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :first-child {\r\n\t\t\t\t\t\tmargin-top: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.row.uniform > * > :last-child {\r\n\t\t\t\t\t\tmargin-bottom: 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t// Gutters (0%).\r\n\t\t\t\t\t@include grid-gutters($grid-gutters, \\30 \\25, 0);\r\n\r\n\t\t\t\t// Apply base.\r\n\t\t\t\t\t@include grid($grid-gutters);\r\n\r\n\t\t\t\t// Apply per-breakpoint.\r\n\t\t\t\t\t@each $name in map-keys($breakpoints) {\r\n\r\n\t\t\t\t\t\t// Get/use breakpoint setting if it exists.\r\n\t\t\t\t\t\t\t$x: map-get($configPerBreakpoint, $name);\r\n\r\n\t\t\t\t\t\t\t// Per-breakpoint config exists?\r\n\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t$y: map-get($x, 'grid');\r\n\r\n\t\t\t\t\t\t\t\t\t// Setting exists?\r\n\t\t\t\t\t\t\t\t\t\t@if $y {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t// Sub-setting: Gutters.\r\n\t\t\t\t\t\t\t\t\t\t\t\t$x: map-get($y, 'gutters');\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t@if $x {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t$grid-gutters: $x;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Create @media block.\r\n\t\t\t\t\t\t\t@media screen and #{map-get($breakpoints, $name)} {\r\n\t\t\t\t\t\t\t\t@include grid($grid-gutters, $name);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t}\r\n\r\n\t/// Resets browser styles.\r\n\t/// @param {string} $mode Mode (default is 'normalize').\r\n\t@mixin reset($mode: 'normalize') {\r\n\r\n\t\t@if $mode == 'normalize' {\r\n\r\n\t\t\t// normalize.css v3.0.2 | MIT License | git.io/normalize\r\n\t\t\t\thtml{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}\r\n\r\n\t\t}\r\n\t\t@else if $mode == 'full' {\r\n\r\n\t\t\t// meyerweb.com/eric/tools/css/reset v2.0 | 20110126 | License: none (public domain)\r\n\t\t\t\thtml,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block;}body{line-height:1;}ol,ul{list-style:none;}blockquote,q{quotes:none;}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none;}table{border-collapse:collapse;border-spacing:0;}body{-webkit-text-size-adjust:none}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/// Vendorizes a declaration's property and/or value(s).\r\n\t/// @param {string} $property Property.\r\n\t/// @param {mixed} $value String/list of value(s).\r\n\t@mixin vendor($property, $value) {\r\n\r\n\t\t// Determine if property should expand.\r\n\t\t\t$expandProperty: index($vendor-properties, $property);\r\n\r\n\t\t// Determine if value should expand (and if so, add '-prefix-' placeholder).\r\n\t\t\t$expandValue: false;\r\n\r\n\t\t\t@each $x in $value {\r\n\t\t\t\t@each $y in $vendor-values {\r\n\t\t\t\t\t@if $y == str-slice($x, 1, str-length($y)) {\r\n\r\n\t\t\t\t\t\t$value: set-nth($value, index($value, $x), '-prefix-' + $x);\r\n\t\t\t\t\t\t$expandValue: true;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t// Expand property?\r\n\t\t\t@if $expandProperty {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$vendor}#{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Expand just the value?\r\n\t\t\t@elseif $expandValue {\r\n\t\t\t    @each $vendor in $vendor-prefixes {\r\n\t\t\t        #{$property}: #{str-replace-all($value, '-prefix-', $vendor)};\r\n\t\t\t    }\r\n\t\t\t}\r\n\r\n\t\t// Neither? Treat them as a normal declaration.\r\n\t\t\t@else {\r\n\t\t        #{$property}: #{$value};\r\n\t\t\t}\r\n\r\n\t}","@import \"../libs/vars\";\n@import \"../libs/functions\";\n@import \"../libs/mixins\";\n\n/* Basic */\n\n// Ensures page width is always >=320px.\n@include breakpoint(xsmall) {\n  html, body {\n    min-width: 320px;\n  }\n}\n\n\nbody {\n  // Prevents animation/transition \"flicker\" on page load.\n  // Automatically added/removed by js/main.js.\n  &.is-loading {\n    *, *:before, *:after {\n      @include vendor(\"animation\", \"none !important\");\n      @include vendor(\"transition\", \"none !important\");\n    }\n  }\n}\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  height: 100%;\n  background-color: _palette(bg);\n\n  @include vendor(\"background-image\", ('url(\"images/overlay.png\")', \"linear-gradient(60deg, #{transparentize(_palette(accent1), 0.5)} 5%, #{transparentize(_palette(accent2), 0.65)})\", 'url(\"../../images/bg.jpg\")'));\n\n  background-repeat: repeat,\t\t\tno-repeat,\t\t\tno-repeat;\n  background-size: 100px 100px,\tcover,\t\t\t\tcover;\n  background-position: top left,\t\tcenter center,\t\tbottom center;\n  background-attachment: fixed,\t\t\tfixed,\t\t\t\tfixed;\n\n  &:after {\n    content: '';\n    display: block;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: inherit;\n    opacity: 0;\n    z-index: 1;\n    background-color: _palette(bg);\n\n    @include vendor(\"background-image\", ('url(\"images/overlay.png\")', \"linear-gradient(60deg, #{transparentize(_palette(accent1), 0.5)} 5%, #{transparentize(_palette(accent2), 0.65)})\"));\n\n    background-repeat: repeat,\t\t\tno-repeat;\n    background-size: 100px 100px,\tcover;\n    background-position: top left,\t\tcenter center;\n\n    @include vendor(\"transition\", \"opacity #{_duration(bg)} ease-out\");\n  }\n\n  &.is-loading {\n    &:after {\n      opacity: 1;\n    }\n  }\n}\n","// Misc.\r\n\t$misc: (\r\n\t\tz-index-base:\t\t10000\r\n\t);\r\n\r\n// Duration.\r\n\t$duration: (\r\n\t\ttransition:\t\t\t0.2s,\r\n\t\tbg:\t\t\t\t\t1.75s,\r\n\t\tmain:\t\t\t\t1s\r\n\t);\r\n\r\n// Size.\r\n\t$size: (\r\n\t\tborder-radius:\t\t4px,\r\n\t\tborder-width:\t\t1px,\r\n\t\telement-height:\t\t2.75em,\r\n\t\telement-margin:\t\t1.5em,\r\n\t\tletter-spacing:\t\t0.2em\r\n\t);\r\n\r\n// Font.\r\n\t$font: (\r\n\t\tfamily:\t\t\t\t('Source Sans Pro', Helvetica, sans-serif),\r\n\t\tfamily-fixed:\t\t('Courier New', monospace),\r\n\t\tweight:\t\t\t\t300\r\n\t);\r\n\r\n// Palette.\r\n\t$palette: (\r\n\t\tbg:\t\t\t\t\t#ffffff,\r\n\t\tbg-alt:\t\t\t\t#e1dfe8,\r\n\t\tfg:\t\t\t\t\t#414f57,\r\n\t\tfg-bold:\t\t\t#313f47,\r\n\t\tfg-light:\t\t\t#616f77,\r\n\t\tborder:\t\t\t\t#c8cccf,\r\n\t\taccent1:\t\t\t#ffa596,\r\n\t\taccent2:\t\t\t#00e4ff,\r\n\t\thighlight:\t\t\t#ff7496\r\n\t);","@import \"../libs/vars\";\n@import \"../libs/functions\";\n@import \"../libs/mixins\";\n\n/* Type */\n\nbody,\ninput,\nselect,\ntextarea {\n  color: _palette(fg);\n  font-family: _font(family);\n  font-size: 14pt;\n  font-weight: _font(weight);\n  line-height: 2;\n  letter-spacing: _size(letter-spacing);\n  text-transform: uppercase;\n\n  @include breakpoint(xlarge) {\n    font-size: 11pt;\n  }\n\n\n  @include breakpoint(xsmall) {\n    font-size: 10pt;\n    line-height: 1.75;\n  }\n}\n\na {\n  @include vendor(\"transition\", (\"color #{_duration(transition)} ease\", \"border-color #{_duration(transition)} ease\"));\n\n  color: inherit;\n  text-decoration: none;\n\n  &::before {\n    @include vendor(\"transition\", (\"color #{_duration(transition)} ease\", \"text-shadow #{_duration(transition)} ease\"));\n  }\n\n  &:hover {\n    color: _palette(highlight);\n  }\n}\n\nstrong,\nb {\n  color: _palette(fg-bold);\n}\n\nem,\ni {\n  font-style: italic;\n}\n\np {\n  margin: 0 0 _size(element-margin) 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  color: _palette(fg-bold);\n  line-height: 1.5;\n  margin: 0 0 (_size(element-margin) * 0.5) 0;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\nh1 {\n  font-size: 1.85em;\n  letter-spacing: _size(letter-spacing) * 1.1;\n  margin: 0 0 (_size(element-margin) * 0.35) 0;\n}\n\nh2 {\n  font-size: 1.25em;\n}\n\nh3 {\n  font-size: 1em;\n}\n\nh4 {\n  font-size: 1em;\n}\n\nh5 {\n  font-size: 1em;\n}\n\nh6 {\n  font-size: 1em;\n}\n\n@include breakpoint(xsmall) {\n  h1 {\n    font-size: 1.65em;\n  }\n}\n\n\nsub {\n  font-size: 0.8em;\n  position: relative;\n  top: 0.5em;\n}\n\nsup {\n  font-size: 0.8em;\n  position: relative;\n  top: -0.5em;\n}\n\nhr {\n  border: 0;\n  border-bottom: solid _size(border-width) _palette(border);\n  margin: (_size(element-margin) * 2) 0;\n}\n","@import \"../libs/vars\";\n@import \"../libs/functions\";\n@import \"../libs/mixins\";\n\n/* Form */\n\nform {\n  margin: 0 0 _size(element-margin) 0;\n\n  > .field {\n    margin: 0 0 _size(element-margin) 0;\n\n    > :last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\nlabel {\n  color: _palette(fg-bold);\n  display: block;\n  font-size: 0.9em;\n  margin: 0 0 (_size(element-margin) * 0.5) 0;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"email\"],\ninput[type=\"tel\"],\nselect,\ntextarea {\n  @include vendor(\"appearance\", \"none\");\n\n  border-radius: _size(border-radius);\n  border: solid 1px _palette(border);\n  color: inherit;\n  display: block;\n  outline: 0;\n  padding: 0 1em;\n  text-decoration: none;\n  width: 100%;\n\n  &:invalid {\n    box-shadow: none;\n  }\n\n  &:focus {\n    border-color: _palette(highlight);\n  }\n}\n\n.select-wrapper {\n  @include icon(\"\");\n\n  display: block;\n  position: relative;\n\n  &::before {\n    color: _palette(border);\n    display: block;\n    height: _size(element-height);\n    line-height: _size(element-height);\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n    width: _size(element-height);\n  }\n\n  select::-ms-expand {\n    display: none;\n  }\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"email\"],\nselect {\n  height: _size(element-height);\n}\n\ntextarea {\n  padding: 0.75em 1em;\n}\n\ninput[type=\"checkbox\"],\ninput[type=\"radio\"] {\n  @include vendor(\"appearance\", \"none\");\n\n  display: block;\n  float: left;\n  margin-right: -2em;\n  opacity: 0;\n  width: 1em;\n  z-index: -1;\n\n  & + label {\n    @include icon;\n\n    color: _palette(fg);\n    cursor: pointer;\n    display: inline-block;\n    font-size: 1em;\n    font-weight: _font(weight);\n    padding-left: _size(element-height) * 0.6 + 0.75em;\n    padding-right: 0.75em;\n    position: relative;\n\n    &::before {\n      background: _palette(border-bg);\n      border-radius: _size(border-radius);\n      border: solid 1px _palette(border);\n      content: '';\n      display: inline-block;\n      height: _size(element-height) * 0.6;\n      left: 0;\n      line-height: _size(element-height) * 0.575;\n      position: absolute;\n      text-align: center;\n      top: 0.15em;\n      width: _size(element-height) * 0.6;\n    }\n  }\n\n  &:checked + label {\n    &::before {\n      color: _palette(highlight);\n      content: '\\f00c';\n    }\n  }\n\n  &:focus + label {\n    &::before {\n      border-color: _palette(highlight);\n    }\n  }\n}\n\ninput[type=\"checkbox\"] {\n  & + label {\n    &::before {\n      border-radius: _size(border-radius);\n    }\n  }\n}\n\ninput[type=\"radio\"] {\n  & + label {\n    &::before {\n      border-radius: 100%;\n    }\n  }\n}\n\n::-webkit-input-placeholder {\n  color: _palette(fg-light) !important;\n  opacity: 1;\n}\n\n:-moz-placeholder {\n  color: _palette(fg-light) !important;\n  opacity: 1;\n}\n\n::-moz-placeholder {\n  color: _palette(fg-light) !important;\n  opacity: 1;\n}\n\n:-ms-input-placeholder {\n  color: _palette(fg-light) !important;\n  opacity: 1;\n}\n\n.formerize-placeholder {\n  color: _palette(fg-light) !important;\n  opacity: 1;\n}\n","@import \"../libs/vars\";\n@import \"../libs/functions\";\n@import \"../libs/mixins\";\n\n/* Icon */\n\n.icon {\n  @include icon;\n\n  position: relative;\n  border-bottom: none;\n\n  > .label {\n    display: none;\n  }\n}\n","@import \"../libs/vars\";\n@import \"../libs/functions\";\n@import \"../libs/mixins\";\n\n/* List */\n\nol {\n  list-style: decimal;\n  margin: 0 0 _size(element-margin) 0;\n  padding-left: 1.25em;\n\n  li {\n    padding-left: 0.25em;\n  }\n}\n\nul {\n  list-style: disc;\n  margin: 0 0 _size(element-margin) 0;\n  padding-left: 1em;\n\n  li {\n    padding-left: 0.5em;\n  }\n\n  &.alt {\n    list-style: none;\n    padding-left: 0;\n\n    li {\n      border-top: solid 1px _palette(border);\n      padding: 0.5em 0;\n\n      &:first-child {\n        border-top: 0;\n        padding-top: 0;\n      }\n    }\n  }\n\n  &.icons {\n    cursor: default;\n    list-style: none;\n    padding-left: 0;\n    margin-top: -0.675em;\n\n    li {\n      display: inline-block;\n      padding: 0.675em 0.5em;\n\n      a {\n        @include icon-alt(false, true);\n\n        position: relative;\n        display: block;\n        width: 3.75em;\n        height: 3.75em;\n        border-radius: 100%;\n        border: solid _size(border-width) _palette(border);\n        line-height: 3.75em;\n        overflow: hidden;\n        text-align: center;\n        text-indent: 3.75em;\n        white-space: nowrap;\n\n        &::before {\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: inherit;\n          height: inherit;\n          font-size: 1.85rem;\n          line-height: inherit;\n          text-align: center;\n          text-indent: 0;\n        }\n\n        &:hover {\n          border-color: _palette(highlight);\n        }\n      }\n    }\n\n    @include breakpoint(xsmall) {\n      li {\n        a {\n          &::before {\n            font-size: 1.5rem;\n          }\n        }\n      }\n    }\n  }\n\n  &.actions {\n    cursor: default;\n    list-style: none;\n    padding-left: 0;\n\n    li {\n      display: inline-block;\n      padding: 0 (_size(element-margin) * 0.5) 0 0;\n      vertical-align: middle;\n\n      &:last-child {\n        padding-right: 0;\n      }\n    }\n  }\n}\n\ndl {\n  margin: 0 0 _size(element-margin) 0;\n\n  dt {\n    display: block;\n    font-weight: _font(weight-bold);\n    margin: 0 0 (_size(element-margin) * 0.5) 0;\n  }\n\n  dd {\n    margin-left: _size(element-margin);\n  }\n}\n","@import \"../libs/vars\";\n@import \"../libs/functions\";\n@import \"../libs/mixins\";\n\n/* Button */\n\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"],\nbutton,\n.button {\n  @include vendor(\"appearance\", \"none\");\n  @include vendor(\"transition\", (\"background-color #{_duration(transition)} ease-in-out\", \"border-color #{_duration(transition)} ease-in-out\", \"color #{_duration(transition)} ease-in-out\"));\n\n  display: inline-block;\n  height: _size(element-height);\n  line-height: _size(element-height);\n  padding: 0 1.5em;\n  background-color: transparent;\n  border-radius: _size(border-radius);\n  border: solid 1px _palette(border);\n  color: _palette(fg) !important;\n  cursor: pointer;\n  text-align: center;\n  text-decoration: none;\n  white-space: nowrap;\n\n  &:hover {\n    border-color: _palette(highlight);\n    color: _palette(highlight) !important;\n  }\n\n  &.icon {\n    padding-left: 1.35em;\n\n    &:before {\n      margin-right: 0.5em;\n    }\n  }\n\n  &.fit {\n    display: block;\n    width: 100%;\n    margin: 0 0 (_size(element-margin) * 0.5) 0;\n  }\n\n  &.small {\n    font-size: 0.8em;\n  }\n\n  &.big {\n    font-size: 1.35em;\n  }\n\n  &.disabled,\n  &:disabled {\n    @include vendor(\"pointer-events\", \"none\");\n\n    opacity: 0.5;\n  }\n}\n","@import '../libs/vars';\r\n@import '../libs/functions';\r\n@import '../libs/mixins';\r\n\r\n/* Main */\r\n\r\n\t#main {\r\n\t\tposition: relative;\r\n\t\tmax-width: 100%;\r\n\t\tmin-width: 27em;\r\n\t\t@include padding(4.5em, 3em);\r\n\r\n\t\tbackground: _palette(bg);\r\n\t\tborder-radius: _size(border-radius);\r\n\t\tcursor: default;\r\n\t\topacity: 0.95;\r\n\t\ttext-align: center;\r\n\r\n\t\t@include vendor('transform-origin', '50% 50%');\r\n\t\t@include vendor('transform', 'rotateX(0deg)');\r\n\t\t@include vendor('transition', (\r\n\t\t\t'opacity #{_duration(main)} ease',\r\n\t\t\t'transform #{_duration(main)} ease'\r\n\t\t));\r\n\r\n\t\t.avatar {\r\n\t\t\tposition: relative;\r\n\t\t\tdisplay: block;\r\n\t\t\tmargin-bottom: _size(element-margin);\r\n\r\n\t\t\timg {\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tmargin: 0 auto;\r\n\t\t\t\tborder-radius: 100%;\r\n\t\t\t\tbox-shadow: 0 0 0 1.5em _palette(bg);\r\n                width: 122px;\r\n                height: 122px;\r\n\t\t\t}\r\n\r\n\t\t\t&:before {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 50%;\r\n\t\t\t\tleft: -3em;\r\n\t\t\t\twidth: calc(100% + 6em);\r\n\t\t\t\theight: _size(border-width);\r\n\t\t\t\tz-index: -1;\r\n\t\t\t\tbackground: _palette(border);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@include breakpoint(xsmall) {\r\n\t\t\tmin-width: 0;\r\n\t\t\twidth: 100%;\r\n\t\t\t@include padding(4em, 2em);\r\n\r\n\t\t\t.avatar {\r\n\t\t\t\t&:before {\r\n\t\t\t\t\tleft: -2em;\r\n\t\t\t\t\twidth: calc(100% + 4em);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbody.is-loading & {\r\n\t\t\topacity: 0;\r\n\t\t\t@include vendor('transform', 'rotateX(15deg)');\r\n\t\t}\r\n\t}","@import '../libs/vars';\r\n@import '../libs/functions';\r\n@import '../libs/mixins';\r\n\r\n/* Footer */\r\n\r\n\t#footer {\r\n\t\t@include vendor('align-self', 'flex-end');\r\n\t\twidth: 100%;\r\n\t\tpadding: _size(element-margin) 0 0 0;\r\n\t\tcolor: rgba(255,255,255,0.75);\r\n\t\tcursor: default;\r\n\t\ttext-align: center;\r\n\r\n\t\t.copyright {\r\n\t\t\tmargin: 0;\r\n\t\t\tpadding: 0;\r\n\t\t\tfont-size: 0.9em;\r\n\t\t\tlist-style: none;\r\n\r\n\t\t\tli {\r\n\t\t\t\tdisplay: inline-block;\r\n\t\t\t\tmargin: 0 0 0 (0.85em - (_size(letter-spacing) * 2));\r\n\t\t\t\tpadding: 0 0 0 0.85em;\r\n\t\t\t\tborder-left: solid _size(border-width) rgba(255,255,255,0.5);\r\n\t\t\t\tline-height: 1;\r\n\r\n\t\t\t\t&:first-child {\r\n\t\t\t\t\tborder-left: 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","@import '../libs/vars';\r\n@import '../libs/functions';\r\n@import '../libs/mixins';\r\n\r\n/* Wrapper */\r\n\r\n\t#wrapper {\r\n\t\t@include vendor('display', 'flex');\r\n\t\t@include vendor('align-items', 'center');\r\n\t\t@include vendor('justify-content', 'space-between');\r\n\t\t@include vendor('flex-direction', 'column');\r\n\t\t@include vendor('perspective', '1000px');\r\n\t\tposition: relative;\r\n\t\tmin-height: 100%;\r\n\t\tpadding: _size(element-margin);\r\n\t\tz-index: 2;\r\n\r\n\t\t> * {\r\n\t\t\tz-index: 1;\r\n\t\t}\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\r\n\t\t@include breakpoint(xxsmall) {\r\n\t\t\tpadding: (_size(element-margin) * 0.5);\r\n\t\t}\r\n\r\n\t\tbody.is-ie & {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t}"]}